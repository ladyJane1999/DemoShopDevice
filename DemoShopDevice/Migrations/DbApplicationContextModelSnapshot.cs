// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SiteShopCar.Data;

#nullable disable

namespace DemoShopDevice.Migrations
{
    [DbContext(typeof(DbApplicationContext))]
    partial class DbApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectDemo.Model.Backet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("backet");
                });

            modelBuilder.Entity("ProjectDemo.Model.Backet_device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("backet_id")
                        .HasColumnType("integer");

                    b.Property<int>("device_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("backet_id");

                    b.HasIndex("device_id");

                    b.ToTable("backet_device");
                });

            modelBuilder.Entity("ProjectDemo.Model.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Rate")
                        .HasColumnType("integer")
                        .HasColumnName("rate");

                    b.Property<int>("device_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("device_id")
                        .IsUnique();

                    b.HasIndex("user_id");

                    b.ToTable("rating");
                });

            modelBuilder.Entity("ProjectDemo.Model.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("SiteShopCar.Model.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BrandId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("BrandId");

                    b.ToTable("brand");
                });

            modelBuilder.Entity("SiteShopCar.Model.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<int>("brand_id")
                        .HasColumnType("integer");

                    b.Property<int>("device_id")
                        .HasColumnType("integer");

                    b.HasKey("DeviceId");

                    b.HasIndex("brand_id");

                    b.HasIndex("device_id");

                    b.ToTable("device");
                });

            modelBuilder.Entity("SiteShopCar.Model.TypeDevice", b =>
                {
                    b.Property<int>("TypeDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeDeviceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("TypeDeviceId");

                    b.ToTable("type_device");
                });

            modelBuilder.Entity("ProjectDemo.Model.Backet", b =>
                {
                    b.HasOne("ProjectDemo.Model.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectDemo.Model.Backet_device", b =>
                {
                    b.HasOne("ProjectDemo.Model.Backet", "Backet")
                        .WithMany()
                        .HasForeignKey("backet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteShopCar.Model.Device", "Device")
                        .WithMany()
                        .HasForeignKey("device_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Backet");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("ProjectDemo.Model.Rating", b =>
                {
                    b.HasOne("SiteShopCar.Model.Device", "Device")
                        .WithOne("rating")
                        .HasForeignKey("ProjectDemo.Model.Rating", "device_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectDemo.Model.Users", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SiteShopCar.Model.Device", b =>
                {
                    b.HasOne("SiteShopCar.Model.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("brand_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteShopCar.Model.TypeDevice", "DeviceType")
                        .WithMany()
                        .HasForeignKey("device_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("SiteShopCar.Model.Device", b =>
                {
                    b.Navigation("rating")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
